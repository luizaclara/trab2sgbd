func removeItem(arr []int, index int) []int {
    // Verificar se o índice está dentro dos limites do array
    if index < 0 || index >= len(arr) {
        return arr // Retorna o array sem fazer alterações se o índice estiver fora dos limites
    }

    // Cria um novo slice para armazenar os elementos remanescentes
    result := make([]int, len(arr)-1)

    // Copia os elementos anteriores ao índice
    copy(result, arr[:index])

    // Copia os elementos posteriores ao índice
    copy(result[index:], arr[index+1:])

    return result
}

func main() {
    arr := []int{1, 2, 3, 4, 5}
    index := 2

    arr = removeItem(arr, index)

    fmt.Println(arr) // Output: [1 2 4 5]
}


---------------------------------------------

func removeItems(arr []int) []int {
    // Cria um slice auxiliar para marcar os itens que serão removidos
    marked := make([]bool, len(arr))

    // Marca os itens que devem ser removidos (por exemplo, todos os números pares)
    for i := 0; i < len(arr); i++ {
        if arr[i]%2 == 0 {
            marked[i] = true
        }
    }

    // Cria um novo slice apenas com os itens não marcados
    result := make([]int, 0)
    for i := 0; i < len(arr); i++ {
        if !marked[i] {
            result = append(result, arr[i])
        }
    }

    return result
}

func main() {
    arr := []int{1, 2, 3, 4, 5}

    arr = removeItems(arr)

    fmt.Println(arr) // Output: [1 3 5]
}